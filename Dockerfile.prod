FROM node:22-alpine AS builder

# Environment variables for Node.js optimization
ENV NODE_ENV=production

# Create non-root user for security
RUN addgroup -g 1000 -S user && \
    adduser -S user -u 1000 -G user && \
    mkdir -p /scenario && \
    chown -R user:user /scenario

# Set working directory
WORKDIR /scenario

# Copy package configuration files
COPY ./package*.json /scenario/

# Install dependencies
RUN npm ci --only=production

# Copy application code
COPY . /scenario/

# Build the application
RUN npm run build

# Production stage with nginx
FROM nginx:alpine

# Install system dependencies for security updates
RUN apk update && \
    apk upgrade && \
    apk add --no-cache curl && \
    rm -rf /var/cache/apk/*

# Create non-root user for nginx
RUN addgroup -g 1000 -S user && \
    adduser -S user -u 1000 -G user

# Copy built application from builder stage
COPY --from=builder --chown=user:user /scenario/dist /usr/share/nginx/html

# Copy nginx configuration
COPY ./nginx.conf /etc/nginx/nginx.conf

# Switch to non-root user
USER user

# Expose the application port
EXPOSE 5173

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5173/ || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]